#Creation CronJob if ENVIRONMENT_CHECKER_CRON_JOB_COMMAND filled
---
{{- if .Values.ENVIRONMENT_CHECKER_CRON_JOB_COMMAND }}
kind: CronJob
apiVersion: batch/v1
metadata:
  name: '{{ printf "%s-cronjob" .Values.SERVICE_NAME }}'
  labels:
    name: '{{ .Values.SERVICE_NAME }}'
    application: '{{ .Values.APPLICATION_NAME }}'
    app.kubernetes.io/name: '{{ .Values.SERVICE_NAME }}'
    app.kubernetes.io/component: job
    app.kubernetes.io/part-of: '{{ .Values.APPLICATION_NAME }}'
    app.kubernetes.io/managed-by: '{{ .Values.MANAGED_BY }}'
spec:
  schedule: '{{ required "ENVIRONMENT_CHECKER_CRON_SCHEDULE is empty" .Values.ENVIRONMENT_CHECKER_CRON_SCHEDULE }}'
  jobTemplate:
    spec:
      backoffLimit: 3
      template:
        spec:
          restartPolicy: Never
          automountServiceAccountToken: {{ .Values.serviceAccount.automountToken }}
          securityContext:
            runAsUser: 10001
          serviceAccountName: {{ .Values.serviceAccount.name }}
          containers:
            - name: '{{ printf "%s-cronjob" .Values.SERVICE_NAME }}'
              image: {{ template "env-checker.image" . }}
              securityContext:
                runAsNonRoot: true
                readOnlyRootFilesystem: {{ .Values.READONLY_CONTAINER_FILE_SYSTEM_ENABLED }}
              command: [ "/bin/sh", "-c", "$(ENVIRONMENT_CHECKER_CRON_JOB_COMMAND)" ]
              env:
                - name: "ENVIRONMENT_CHECKER_CRON_JOB_COMMAND"
                  value: '{{ .Values.ENVIRONMENT_CHECKER_CRON_JOB_COMMAND }}'
                {{- include "envchecker.pod.env" . | nindent 16 }}
              volumeMounts:
                {{- include "envchecker.pod.volumeMounts" . | nindent 16 }}
              resources:
                {{- include "envchecker.pod.resources" . | nindent 16 }}
          {{- include "envchecker.pod.volumes" . | nindent 10 }}
        {{ with .Values.NODE_SELECTOR_LABELS }}
        nodeSelector:
          {{ toYaml . | nindent 10 }}
        {{ end }}
{{- end }}
